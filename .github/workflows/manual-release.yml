name: Build FuckDevicePolicy

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-34" "build-tools;34.0.0"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Create project structure
        run: |
          mkdir -p app/src/main/{java/com/fuckdevicepolicy,assets,res/{values,mipmap-hdpi,mipmap-mdpi,mipmap-xhdpi,mipmap-xxhdpi,mipmap-xxxhdpi}}
          mkdir -p app/libs

      - name: Create source files
        run: |
          # XposedHook.java (simplified)
          cat > app/src/main/java/com/fuckdevicepolicy/XposedHook.java << 'EOF'
          package com.fuckdevicepolicy;
          public class XposedHook {
              // Xposed hook implementation
          }
          EOF
          
          # MainActivity.java
          cat > app/src/main/java/com/fuckdevicepolicy/MainActivity.java << 'EOF'
          package com.fuckdevicepolicy;
          import android.app.Activity;
          import android.os.Bundle;
          import android.widget.TextView;
          public class MainActivity extends Activity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  TextView tv = new TextView(this);
                  tv.setText("FuckDevicePolicy Active");
                  setContentView(tv);
              }
          }
          EOF
          
          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.fuckdevicepolicy">
              <application android:label="FuckDevicePolicy">
                  <activity android:name=".MainActivity" android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF
          
          # strings.xml
          cat > app/src/main/res/values/strings.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">FuckDevicePolicy</string>
          </resources>
          EOF

      - name: Setup Gradle
        run: |
          wget -q https://services.gradle.org/distributions/gradle-8.5-bin.zip
          unzip -q gradle-8.5-bin.zip
          echo "#!/bin/bash" > gradlew
          echo "exec $PWD/gradle-8.5/bin/gradle \"\$@\"" >> gradlew
          chmod +x gradlew

      - name: Create Gradle files
        run: |
          cat > build.gradle << 'EOF'
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.1.4'
              }
          }
          EOF
          
          cat > app/build.gradle << 'EOF'
          plugins {
              id 'com.android.application'
          }
          android {
              compileSdk 34
              defaultConfig {
                  applicationId "com.fuckdevicepolicy"
                  minSdk 21
                  targetSdk 34
                  versionCode ${{ github.event.inputs.version_code }}
                  versionName "${{ github.event.inputs.version_name }}"
              }
          }
          EOF
          
          cat > settings.gradle << 'EOF'
          include ':app'
          EOF

      - name: Build APK
        run: |
          ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: FuckDevicePolicy-APK
          path: app/build/outputs/apk/release/*.apk
