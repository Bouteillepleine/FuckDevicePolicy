name: Build FuckDevicePolicy

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏁 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔧 Accept SDK Licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-34" "build-tools;34.0.0"

      - name: 📂 Create Project Structure
        run: |
          mkdir -p app/src/main/java/com/fuckdevicepolicy
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/assets

      - name: 📝 Create Build Configuration
        run: |
          # Root build.gradle
          cat > build.gradle << 'EOF'
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.1.4'
              }
          }
          
          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          EOF
          
          # App build.gradle
          cat > app/build.gradle << 'EOF'
          plugins {
              id 'com.android.application'
          }
          
          android {
              namespace 'com.fuckdevicepolicy'
              compileSdk 34
              
              defaultConfig {
                  applicationId "com.fuckdevicepolicy"
                  minSdk 21
                  targetSdk 34
                  versionCode ${{ github.event.inputs.version_code }}
                  versionName "${{ github.event.inputs.version_name }}"
              }
              
              buildTypes {
                  release {
                      minifyEnabled false
                  }
              }
              
              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_1_8
                  targetCompatibility JavaVersion.VERSION_1_8
              }
              
              lintOptions {
                  abortOnError false
              }
          }
          EOF
          
          # Settings.gradle
          cat > settings.gradle << 'EOF'
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }
          dependencyResolutionManagement {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          
          rootProject.name = "FuckDevicePolicy"
          include ':app'
          EOF
          
          # gradle.properties
          cat > gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx2048m
          android.useAndroidX=true
          android.enableJetifier=true
          EOF

      - name: 📱 Create Application Files
        run: |
          # MainActivity.java
          cat > app/src/main/java/com/fuckdevicepolicy/MainActivity.java << 'EOF'
          package com.fuckdevicepolicy;
          
          import android.app.Activity;
          import android.os.Bundle;
          import android.widget.TextView;
          import android.widget.LinearLayout;
          import android.view.Gravity;
          import android.graphics.Color;
          import android.graphics.Typeface;
          
          public class MainActivity extends Activity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  
                  LinearLayout layout = new LinearLayout(this);
                  layout.setOrientation(LinearLayout.VERTICAL);
                  layout.setGravity(Gravity.CENTER);
                  layout.setBackgroundColor(Color.parseColor("#1a1a1a"));
                  layout.setPadding(60, 60, 60, 60);
                  
                  TextView title = new TextView(this);
                  title.setText("🖕 FuckDevicePolicy");
                  title.setTextSize(28);
                  title.setTextColor(Color.parseColor("#ff4444"));
                  title.setTypeface(null, Typeface.BOLD);
                  title.setGravity(Gravity.CENTER);
                  
                  TextView version = new TextView(this);
                  version.setText("Version: ${{ github.event.inputs.version_name }}\nBuild: ${{ github.event.inputs.version_code }}");
                  version.setTextSize(16);
                  version.setTextColor(Color.parseColor("#cccccc"));
                  version.setGravity(Gravity.CENTER);
                  version.setPadding(0, 30, 0, 0);
                  
                  TextView status = new TextView(this);
                  status.setText("✅ Xposed Module Ready\n🔓 Device Policy Bypass Active");
                  status.setTextSize(18);
                  status.setTextColor(Color.parseColor("#44ff44"));
                  status.setGravity(Gravity.CENTER);
                  status.setPadding(0, 40, 0, 0);
                  
                  TextView instructions = new TextView(this);
                  instructions.setText("1. Enable in LSPosed/Xposed\n2. Reboot device\n3. Enjoy freedom!");
                  instructions.setTextSize(14);
                  instructions.setTextColor(Color.parseColor("#aaaaaa"));
                  instructions.setGravity(Gravity.CENTER);
                  instructions.setPadding(0, 30, 0, 0);
                  
                  layout.addView(title);
                  layout.addView(version);
                  layout.addView(status);
                  layout.addView(instructions);
                  
                  setContentView(layout);
              }
          }
          EOF
          
          # XposedHook.java
          cat > app/src/main/java/com/fuckdevicepolicy/XposedHook.java << 'EOF'
          package com.fuckdevicepolicy;
          
          /**
           * FuckDevicePolicy - Xposed Module
           * Bypasses device policy restrictions
           */
          public class XposedHook {
              
              private static final String TAG = "FuckDevicePolicy";
              
              public static void initZygote() {
                  log("FuckDevicePolicy module loaded successfully!");
                  // Hook implementations will be added here
              }
              
              public static void log(String message) {
                  System.out.println(TAG + ": " + message);
              }
          }
          EOF
          
          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              
              <application
                  android:allowBackup="true"
                  android:label="@string/app_name"
                  android:theme="@android:style/Theme.Material.Light.DarkActionBar">
                  
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:label="@string/app_name">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
                  
                  <!-- Xposed Module Configuration -->
                  <meta-data
                      android:name="xposedmodule"
                      android:value="true" />
                  <meta-data
                      android:name="xposeddescription"
                      android:value="@string/xposed_description" />
                  <meta-data
                      android:name="xposedminversion"
                      android:value="54" />
                      
              </application>
          </manifest>
          EOF
          
          # strings.xml
          cat > app/src/main/res/values/strings.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">FuckDevicePolicy</string>
              <string name="xposed_description">Bypasses device policy restrictions including unknown sources, developer settings, and more.</string>
          </resources>
          EOF
          
          # xposed_init
          echo "com.fuckdevicepolicy.XposedHook" > app/src/main/assets/xposed_init

      - name: 🔨 Build APK with Gradle Action
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.5
          arguments: |
            assembleRelease
            --stacktrace
            --info

      - name: 📦 Prepare Release Files
        run: |
          echo "🔍 Looking for APK files..."
          find . -name "*.apk" -type f
          
          cd app/build/outputs/apk/release
          
          if [ -f "app-release.apk" ]; then
              mv app-release.apk "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk"
              echo "✅ APK renamed successfully"
              ls -la *.apk
              
              # Get APK size
              APK_SIZE=$(du -h *.apk | cut -f1)
              echo "📦 APK Size: $APK_SIZE"
              echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
          else
              echo "❌ APK file not found!"
              echo "📂 Contents of release directory:"
              ls -la
              echo "📂 Contents of apk directory:"
              ls -la ../
              echo "📂 Contents of outputs directory:"
              ls -la ../../
              exit 1
          fi

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version_name }}"
          name: "🖕 FuckDevicePolicy v${{ github.event.inputs.version_name }}"
          body: |
            # 🖕 FuckDevicePolicy v${{ github.event.inputs.version_name }}
            
            ## 🔓 **Device Policy Bypass Module**
            
            A powerful Xposed module that bypasses Android device policy restrictions, giving you full control over your device.
            
            ### ✨ **Features:**
            - ✅ **Unknown Sources** - Install APKs from anywhere
            - ✅ **Developer Settings** - Full debugging access
            - ✅ **Cross-Profile Operations** - Copy/paste between profiles
            - ✅ **Connectivity Bypass** - Bluetooth, WiFi, location sharing
            - ✅ **System Features** - Camera, content capture access
            - ✅ **App Verification Bypass** - Skip Google Play Protect
            
            ### 📱 **Installation:**
            1. Install **LSPosed** or **Xposed Framework**
            2. Install this **APK**
            3. Enable module in **LSPosed Manager**
            4. **Reboot** your device
            5. Enjoy **unrestricted access**! 🎉
            
            ### 📊 **Build Info:**
            - **Version:** ${{ github.event.inputs.version_name }}
            - **Build:** ${{ github.event.inputs.version_code }}
            - **Size:** ${{ env.APK_SIZE }}
            - **Target SDK:** 34 (Android 14)
            - **Min SDK:** 21 (Android 5.0)
            
            ### 📋 **Compatibility:**
            - **Android:** 5.0+ (API 21-34)
            - **Xposed:** LSPosed, EdXposed, Original Xposed
            - **Architecture:** ARM, ARM64, x86, x86_64
            
            ### ⚠️ **Disclaimer**
            This module is for educational and testing purposes. Use responsibly and in compliance with your organization's policies.
            
            ---
            **Built with ❤️ by the FuckDevicePolicy team**
          files: |
            app/build/outputs/apk/release/FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: FuckDevicePolicy-v${{ github.event.inputs.version_name }}
          path: |
            app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: 🎉 Build Success Summary
        run: |
          echo "## 🎉 BUILD COMPLETED SUCCESSFULLY!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 **Generated Files:**" >> $GITHUB_STEP_SUMMARY
          echo "- **APK:** FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ github.event.inputs.version_name }} (Build ${{ github.event.inputs.version_code }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Size:** ${{ env.APK_SIZE }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 **Download Links:**" >> $GITHUB_STEP_SUMMARY
          echo "- [📱 **Download APK**](https://github.com/${{ github.repository }}/releases/tag/v${{ github.event.inputs.version_name }})" >> $GITHUB_STEP_SUMMARY
          echo "- [📋 **View Artifacts**](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 **Ready to Use!**" >> $GITHUB_STEP_SUMMARY
          echo "Your FuckDevicePolicy Xposed module is ready for installation! 🎊" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the APK from the release page" >> $GITHUB_STEP_SUMMARY
          echo "2. Install on your device" >> $GITHUB_STEP_SUMMARY
          echo "3. Enable in LSPosed/Xposed Manager" >> $GITHUB_STEP_SUMMARY
          echo "4. Reboot and enjoy! 🔓" >> $GITHUB_STEP_SUMMARY
