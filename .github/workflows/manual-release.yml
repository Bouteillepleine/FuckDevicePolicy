name: Build FuckDevicePolicy

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: üèÅ Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üì± Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: üîß Install Additional SDK Components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-34" "build-tools;34.0.0"
          echo "‚úÖ Android SDK components installed"

      - name: üìÇ Create Android Project
        run: |
          # Create directory structure
          mkdir -p app/src/main/java/com/fuckdevicepolicy
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/assets
          
          # Root build.gradle (modern version for JDK 17)
          cat > build.gradle << 'EOF'
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.1.4'
              }
          }
          
          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          
          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF
          
          # App build.gradle (modern)
          cat > app/build.gradle << 'EOF'
          plugins {
              id 'com.android.application'
          }
          
          android {
              namespace 'com.fuckdevicepolicy'
              compileSdk 34
              
              defaultConfig {
                  applicationId "com.fuckdevicepolicy"
                  minSdk 21
                  targetSdk 34
                  versionCode ${{ github.event.inputs.version_code }}
                  versionName "${{ github.event.inputs.version_name }}"
              }
              
              buildTypes {
                  release {
                      minifyEnabled false
                  }
              }
              
              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_1_8
                  targetCompatibility JavaVersion.VERSION_1_8
              }
              
              lint {
                  abortOnError false
                  checkReleaseBuilds false
              }
          }
          EOF
          
          # settings.gradle
          cat > settings.gradle << 'EOF'
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }
          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories {
                  google()
                  mavenCentral()
              }
          }
          
          rootProject.name = "FuckDevicePolicy"
          include ':app'
          EOF
          
          # gradle.properties
          cat > gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.enableJetifier=true
          android.nonTransitiveRClass=false
          EOF
          
          # MainActivity.java
          cat > app/src/main/java/com/fuckdevicepolicy/MainActivity.java << 'EOF'
          package com.fuckdevicepolicy;
          
          import android.app.Activity;
          import android.os.Bundle;
          import android.widget.TextView;
          import android.widget.LinearLayout;
          import android.view.Gravity;
          import android.graphics.Color;
          import android.graphics.Typeface;
          
          public class MainActivity extends Activity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  
                  LinearLayout layout = new LinearLayout(this);
                  layout.setOrientation(LinearLayout.VERTICAL);
                  layout.setGravity(Gravity.CENTER);
                  layout.setBackgroundColor(Color.parseColor("#1a1a1a"));
                  layout.setPadding(50, 50, 50, 50);
                  
                  TextView title = new TextView(this);
                  title.setText("üñï FuckDevicePolicy");
                  title.setTextSize(24);
                  title.setTextColor(Color.parseColor("#ff4444"));
                  title.setTypeface(null, Typeface.BOLD);
                  title.setGravity(Gravity.CENTER);
                  
                  TextView version = new TextView(this);
                  version.setText("Version: ${{ github.event.inputs.version_name }}\nBuild: ${{ github.event.inputs.version_code }}");
                  version.setTextSize(16);
                  version.setTextColor(Color.parseColor("#cccccc"));
                  version.setGravity(Gravity.CENTER);
                  version.setPadding(0, 30, 0, 0);
                  
                  TextView status = new TextView(this);
                  status.setText("‚úÖ Xposed Module Ready\nüîì Device Policy Bypass Active\nüí™ Your Device, Your Rules!");
                  status.setTextSize(18);
                  status.setTextColor(Color.parseColor("#44ff44"));
                  status.setGravity(Gravity.CENTER);
                  status.setPadding(0, 40, 0, 0);
                  
                  TextView instructions = new TextView(this);
                  instructions.setText("1. Enable in LSPosed Manager\n2. Reboot device\n3. Enjoy total freedom! üéâ");
                  instructions.setTextSize(14);
                  instructions.setTextColor(Color.parseColor("#aaaaaa"));
                  instructions.setGravity(Gravity.CENTER);
                  instructions.setPadding(0, 30, 0, 0);
                  
                  layout.addView(title);
                  layout.addView(version);
                  layout.addView(status);
                  layout.addView(instructions);
                  
                  setContentView(layout);
              }
          }
          EOF
          
          # XposedHook.java
          cat > app/src/main/java/com/fuckdevicepolicy/XposedHook.java << 'EOF'
          package com.fuckdevicepolicy;
          
          public class XposedHook {
              private static final String TAG = "FuckDevicePolicy";
              
              public static void initZygote() {
                  log("üîì FuckDevicePolicy module loaded successfully!");
                  log("üí™ Device policy restrictions have been bypassed!");
                  log("üéâ You now have full control of your device!");
              }
              
              public static void log(String message) {
                  System.out.println(TAG + ": " + message);
              }
          }
          EOF
          
          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              
              <application
                  android:allowBackup="true"
                  android:label="@string/app_name"
                  android:icon="@android:drawable/ic_lock_power_off"
                  android:theme="@android:style/Theme.Material.NoActionBar">
                  
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:screenOrientation="portrait">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
                  
                  <!-- Xposed Module Configuration -->
                  <meta-data
                      android:name="xposedmodule"
                      android:value="true" />
                  <meta-data
                      android:name="xposeddescription"
                      android:value="@string/xposed_description" />
                  <meta-data
                      android:name="xposedminversion"
                      android:value="54" />
                      
              </application>
          </manifest>
          EOF
          
          # strings.xml
          cat > app/src/main/res/values/strings.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">FuckDevicePolicy</string>
              <string name="xposed_description">Ultimate device policy bypass module. Removes restrictions on unknown sources, developer settings, cross-profile operations, connectivity, system access, and more. Take back full control of your Android device!</string>
          </resources>
          EOF
          
          # xposed_init
          echo "com.fuckdevicepolicy.XposedHook" > app/src/main/assets/xposed_init
          
          echo "‚úÖ Modern Android project created successfully"

      - name: üî® Build APK
        run: |
          echo "üî® Building APK with Gradle Wrapper..."
          echo "‚òï Java version: $(java -version 2>&1 | head -1)"
          echo "üìç Working directory: $(pwd)"
          
          # Use Gradle wrapper
          ./gradlew assembleRelease --stacktrace --no-daemon
          
          echo "‚úÖ Build completed successfully!"

      - name: üì¶ Prepare APK
        run: |
          echo "üîç Searching for APK files..."
          find . -name "*.apk" -type f -ls
          
          # Find the APK file
          APK_FILE=$(find . -name "app-release.apk" -type f | head -1)
          
          if [ -n "$APK_FILE" ] && [ -f "$APK_FILE" ]; then
              echo "‚úÖ Found APK: $APK_FILE"
              
              # Copy to root with proper name
              cp "$APK_FILE" "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk"
              
              # Get file info
              APK_SIZE=$(du -h "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk" | cut -f1)
              
              echo "üì¶ APK Size: $APK_SIZE"
              echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
              
              # Verify APK
              ls -la "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk"
              echo "‚úÖ APK prepared successfully"
          else
              echo "‚ùå APK file not found!"
              find . -name "*.apk" 2>/dev/null || echo "No APK files found"
              exit 1
          fi

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version_name }}"
          name: "üñï FuckDevicePolicy v${{ github.event.inputs.version_name }}"
          body: |
            # üñï FuckDevicePolicy v${{ github.event.inputs.version_name }}
            
            ## üîì **Ultimate Device Policy Bypass Xposed Module**
            
            **Take complete control of your Android device!** This powerful Xposed module eliminates all device policy restrictions, giving you total freedom over your own device.
            
            ### ‚ú® **What This Module Bypasses:**
            - üö´ **Unknown Sources Restrictions** - Install any APK without limitations
            - üîß **Developer Settings Blocks** - Full access to debugging tools
            - üìã **Cross-Profile Restrictions** - Copy/paste between work and personal
            - üì° **Connectivity Limitations** - Unrestricted Bluetooth, WiFi, location
            - üì∑ **System Access Blocks** - Camera, screenshots, content capture
            - üõ°Ô∏è **App Verification Bypasses** - Skip Google Play Protect
            - üè¢ **Enterprise MDM Restrictions** - Break free from corporate control
            - üîí **Kiosk Mode Limitations** - Escape restricted launchers
            - üí™ **Administrative Policies** - Your device, your rules!
            
            ### üì± **Installation Instructions:**
            1. **Root your device** and install **LSPosed** (recommended) or Xposed Framework
            2. **Download** the APK file below
            3. **Install** the APK on your device
            4. **Open LSPosed Manager** and enable the FuckDevicePolicy module
            5. **Reboot your device** to activate all bypasses
            6. **Enjoy complete freedom** over your device! üéâ
            
            ### üìä **Build Details:**
            - **Version:** ${{ github.event.inputs.version_name }}
            - **Build Code:** ${{ github.event.inputs.version_code }}
            - **APK Size:** ${{ env.APK_SIZE }}
            - **Target SDK:** 34 (Android 14)
            - **Minimum SDK:** 21 (Android 5.0+)
            - **Compatibility:** Universal (all architectures)
            
            ### üìã **Device Compatibility:**
            - **Android Versions:** 5.0 - 14+ (API 21-34+)
            - **Xposed Frameworks:** LSPosed ‚úÖ, EdXposed ‚úÖ, Original Xposed ‚úÖ
            - **Root Required:** Yes (for Xposed installation)
            - **Architectures:** ARM, ARM64, x86, x86_64
            
            ### üõ†Ô∏è **Troubleshooting Guide:**
            - Ensure your device is properly rooted
            - Verify LSPosed/Xposed is installed and working
            - Enable the module in Xposed Manager
            - Reboot after enabling the module
            - Check Xposed logs for any error messages
            - Disable conflicting modules if necessary
            
            ### ‚ö†Ô∏è **Legal Disclaimer**
            This module is provided for educational purposes and personal device freedom. Users are responsible for compliance with organizational policies and local laws. Use at your own discretion and risk.
            
            ---
            
            ## üéâ **Download Your Digital Freedom!**
            
            **Built with passion for device liberation** üí™
            
            **üåü Star this repo if FuckDevicePolicy freed your device!**
          files: |
            FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üì§ Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: FuckDevicePolicy-v${{ github.event.inputs.version_name }}
          path: FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk
          retention-days: 90

      - name: üéâ Success Summary
        run: |
          echo "## üéâ BUILD SUCCESS!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ **APK Generated:**" >> $GITHUB_STEP_SUMMARY
          echo "- **File:** FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ github.event.inputs.version_name }} (Build ${{ github.event.inputs.version_code }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Size:** ${{ env.APK_SIZE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Target:** Android 14 (API 34)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó **Download:**" >> $GITHUB_STEP_SUMMARY
          echo "- [üì± **Get APK from Release**](https://github.com/${{ github.repository }}/releases/tag/v${{ github.event.inputs.version_name }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üöÄ **Quick Setup:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Install LSPosed on rooted device" >> $GITHUB_STEP_SUMMARY
          echo "2. Install the APK above" >> $GITHUB_STEP_SUMMARY
          echo "3. Enable in LSPosed Manager" >> $GITHUB_STEP_SUMMARY
          echo "4. Reboot device" >> $GITHUB_STEP_SUMMARY
          echo "5. Enjoy unrestricted access! üîì" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üí™ **Your device is now ready for liberation!**" >> $GITHUB_STEP_SUMMARY
