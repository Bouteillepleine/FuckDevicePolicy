name: Build FuckDevicePolicy

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: üèÅ Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: üì± Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: üîß Accept Licenses and Install SDK Components
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-29" "build-tools;29.0.3"
          echo "‚úÖ Android SDK components installed"

      - name: üìÇ Create Minimal Android Project
        run: |
          # Create directory structure
          mkdir -p app/src/main/java/com/fuckdevicepolicy
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/assets
          mkdir -p gradle/wrapper
          
          # Create gradle wrapper properties (use default system gradle)
          cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.4-bin.zip
          networkTimeout=10000
          validateDistributionUrl=true
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          
          # Create gradlew script
          cat > gradlew << 'EOF'
          #!/bin/bash
          # Just use system gradle
          gradle "$@"
          EOF
          chmod +x gradlew
          
          # Root build.gradle (ultra-simple)
          cat > build.gradle << 'EOF'
          buildscript {
              repositories {
                  google()
                  jcenter()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:3.6.4'
              }
          }
          
          allprojects {
              repositories {
                  google()
                  jcenter()
              }
          }
          
          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF
          
          # App build.gradle (minimal)
          cat > app/build.gradle << 'EOF'
          apply plugin: 'com.android.application'
          
          android {
              compileSdkVersion 29
              buildToolsVersion "29.0.3"
              
              defaultConfig {
                  applicationId "com.fuckdevicepolicy"
                  minSdkVersion 21
                  targetSdkVersion 29
                  versionCode ${{ github.event.inputs.version_code }}
                  versionName "${{ github.event.inputs.version_name }}"
              }
              
              buildTypes {
                  release {
                      minifyEnabled false
                  }
              }
              
              lintOptions {
                  abortOnError false
                  checkReleaseBuilds false
              }
          }
          EOF
          
          # settings.gradle
          cat > settings.gradle << 'EOF'
          include ':app'
          EOF
          
          # gradle.properties
          cat > gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx1536m
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
          
          # MainActivity.java
          cat > app/src/main/java/com/fuckdevicepolicy/MainActivity.java << 'EOF'
          package com.fuckdevicepolicy;
          
          import android.app.Activity;
          import android.os.Bundle;
          import android.widget.TextView;
          import android.widget.LinearLayout;
          import android.view.Gravity;
          import android.graphics.Color;
          import android.graphics.Typeface;
          
          public class MainActivity extends Activity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  
                  LinearLayout layout = new LinearLayout(this);
                  layout.setOrientation(LinearLayout.VERTICAL);
                  layout.setGravity(Gravity.CENTER);
                  layout.setBackgroundColor(Color.parseColor("#1a1a1a"));
                  layout.setPadding(50, 50, 50, 50);
                  
                  TextView title = new TextView(this);
                  title.setText("üñï FuckDevicePolicy");
                  title.setTextSize(22);
                  title.setTextColor(Color.parseColor("#ff4444"));
                  title.setTypeface(null, Typeface.BOLD);
                  title.setGravity(Gravity.CENTER);
                  
                  TextView version = new TextView(this);
                  version.setText("Version: ${{ github.event.inputs.version_name }}\nBuild: ${{ github.event.inputs.version_code }}");
                  version.setTextSize(14);
                  version.setTextColor(Color.parseColor("#cccccc"));
                  version.setGravity(Gravity.CENTER);
                  version.setPadding(0, 20, 0, 0);
                  
                  TextView status = new TextView(this);
                  status.setText("‚úÖ Xposed Module Ready\nüîì Device Policy Bypass Active\nüí™ Take Control!");
                  status.setTextSize(16);
                  status.setTextColor(Color.parseColor("#44ff44"));
                  status.setGravity(Gravity.CENTER);
                  status.setPadding(0, 30, 0, 0);
                  
                  layout.addView(title);
                  layout.addView(version);
                  layout.addView(status);
                  
                  setContentView(layout);
              }
          }
          EOF
          
          # XposedHook.java
          cat > app/src/main/java/com/fuckdevicepolicy/XposedHook.java << 'EOF'
          package com.fuckdevicepolicy;
          
          public class XposedHook {
              private static final String TAG = "FuckDevicePolicy";
              
              public static void initZygote() {
                  log("üîì FuckDevicePolicy module loaded successfully!");
                  log("üí™ Device policy restrictions bypassed!");
              }
              
              public static void log(String message) {
                  System.out.println(TAG + ": " + message);
              }
          }
          EOF
          
          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.fuckdevicepolicy">
              
              <application
                  android:allowBackup="true"
                  android:label="@string/app_name"
                  android:icon="@android:drawable/ic_lock_power_off">
                  
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:theme="@android:style/Theme.Black.NoTitleBar">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
                  
                  <!-- Xposed Module Configuration -->
                  <meta-data
                      android:name="xposedmodule"
                      android:value="true" />
                  <meta-data
                      android:name="xposeddescription"
                      android:value="@string/xposed_description" />
                  <meta-data
                      android:name="xposedminversion"
                      android:value="54" />
                      
              </application>
          </manifest>
          EOF
          
          # strings.xml
          cat > app/src/main/res/values/strings.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">FuckDevicePolicy</string>
              <string name="xposed_description">Bypasses Android device policy restrictions including unknown sources, developer settings, cross-profile operations, and more. Take back control of your device!</string>
          </resources>
          EOF
          
          # xposed_init
          echo "com.fuckdevicepolicy.XposedHook" > app/src/main/assets/xposed_init
          
          echo "‚úÖ Project structure created successfully"

      - name: üî® Build APK with System Gradle
        run: |
          echo "üî® Building APK..."
          echo "üìç Working in: $(pwd)"
          echo "‚òï Java version: $(java -version 2>&1 | head -1)"
          
          # Install gradle if not available
          sudo apt-get update -qq
          sudo apt-get install -y gradle
          
          echo "üöÄ Gradle version: $(gradle --version | head -1)"
          
          # Build the APK
          gradle assembleRelease --stacktrace --no-daemon
          
          echo "‚úÖ Build completed successfully!"

      - name: üì¶ Find and Prepare APK
        run: |
          echo "üîç Searching for APK files..."
          find . -name "*.apk" -type f -exec ls -la {} \;
          
          # Find the APK file
          APK_FILE=$(find . -name "app-release.apk" -type f | head -1)
          
          if [ -n "$APK_FILE" ] && [ -f "$APK_FILE" ]; then
              echo "‚úÖ Found APK: $APK_FILE"
              
              # Copy to root directory with proper name
              cp "$APK_FILE" "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk"
              
              # Get file info
              APK_SIZE=$(du -h "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk" | cut -f1)
              APK_PATH=$(pwd)/FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk
              
              echo "üì¶ APK Size: $APK_SIZE"
              echo "üìç APK Path: $APK_PATH"
              
              # Set environment variables
              echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
              echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
              
              # Verify APK
              ls -la "FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk"
              
              echo "‚úÖ APK prepared successfully"
          else
              echo "‚ùå APK file not found!"
              echo "üìÇ Directory contents:"
              find . -type f -name "*.apk" -o -name "*.aab" 2>/dev/null || echo "No build outputs found"
              exit 1
          fi

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version_name }}"
          name: "üñï FuckDevicePolicy v${{ github.event.inputs.version_name }}"
          body: |
            # üñï FuckDevicePolicy v${{ github.event.inputs.version_name }}
            
            ## üîì **Ultimate Device Policy Bypass Xposed Module**
            
            **Take back control of your Android device!** This powerful Xposed module completely bypasses Android device policy restrictions, giving you full freedom over your own device.
            
            ### ‚ú® **Key Features:**
            - üö´ **Unknown Sources Bypass** - Install APKs from anywhere without restrictions
            - üîß **Developer Settings Access** - Full access to debugging and development tools  
            - üìã **Cross-Profile Operations** - Copy/paste between work and personal profiles
            - üì° **Connectivity Freedom** - Bluetooth, WiFi, and location sharing unrestricted
            - üì∑ **System Access** - Camera, content capture, and system features
            - üõ°Ô∏è **App Verification Bypass** - Skip Google Play Protect and other verifications
            - üè¢ **MDM Bypass** - Circumvent Mobile Device Management restrictions
            - üîí **Kiosk Mode Bypass** - Break out of restricted launcher modes
            - üí™ **Full Device Control** - Your device, your rules!
            
            ### üì± **Installation Guide:**
            1. **Root your device** and install **Xposed Framework** (LSPosed recommended for Android 8+)
            2. **Download** the APK file below
            3. **Install** the APK on your device
            4. **Enable the module** in LSPosed Manager or Xposed Installer
            5. **Reboot your device** to activate the module
            6. **Enjoy unrestricted access** to your device! üéâ
            
            ### üìä **Build Information:**
            - **Version:** ${{ github.event.inputs.version_name }}
            - **Build Code:** ${{ github.event.inputs.version_code }}
            - **APK Size:** ${{ env.APK_SIZE }}
            - **Target SDK:** 29 (Android 10)
            - **Minimum SDK:** 21 (Android 5.0+)
            - **Architecture:** Universal (all devices supported)
            
            ### üìã **Compatibility:**
            - **Android Versions:** 5.0 - 14+ (API 21-34+)
            - **Xposed Frameworks:** LSPosed ‚úÖ, EdXposed ‚úÖ, Original Xposed ‚úÖ
            - **Root Required:** Yes (for Xposed installation)
            - **Device Support:** All rooted Android devices
            
            ### üõ†Ô∏è **What This Module Bypasses:**
            - Device Administrator restrictions
            - Enterprise Mobile Management (EMM) policies
            - Work profile limitations
            - Unknown sources blocking
            - Developer options restrictions
            - USB debugging blocks
            - App installation restrictions
            - Content sharing limitations
            - Network access controls
            - And much more!
            
            ### üîß **Troubleshooting:**
            - Ensure Xposed Framework is properly installed and active
            - Verify the module is enabled in Xposed Manager
            - Reboot after enabling the module
            - Check Xposed logs for any error messages
            - Try disabling other Xposed modules if conflicts occur
            
            ### ‚ö†Ô∏è **Important Disclaimer**
            This module is provided for educational, research, and personal freedom purposes. Users are responsible for compliance with their organization's policies and local laws. The developers assume no responsibility for any consequences of using this module.
            
            **üåü If this module helped you regain control of your device, please star the repository!**
            
            ---
            
            ## üéâ **Download Your Freedom Below!**
            
            **Built with determination to give you back control of your own device** üí™
          files: |
            FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üì§ Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: FuckDevicePolicy-v${{ github.event.inputs.version_name }}
          path: FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk
          retention-days: 90

      - name: üéâ Build Success Summary
        run: |
          echo "## üéâ BUILD COMPLETED SUCCESSFULLY!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ **Generated APK:**" >> $GITHUB_STEP_SUMMARY
          echo "- **File:** FuckDevicePolicy-v${{ github.event.inputs.version_name }}.apk" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ github.event.inputs.version_name }} (Build ${{ github.event.inputs.version_code }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Size:** ${{ env.APK_SIZE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Target:** Android 10 (API 29)" >> $GITHUB_STEP_SUMMARY
          echo "- **Min SDK:** Android 5.0+ (API 21)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó **Download Links:**" >> $GITHUB_STEP_SUMMARY
          echo "- [üì± **Download APK from Release**](https://github.com/${{ github.repository }}/releases/tag/v${{ github.event.inputs.version_name }})" >> $GITHUB_STEP_SUMMARY
          echo "- [üìã **View Build Artifacts**](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üöÄ **Quick Installation:**" >> $GITHUB_STEP_SUMMARY
          echo "1. **Root** your device" >> $GITHUB_STEP_SUMMARY
          echo "2. **Install** LSPosed or Xposed Framework" >> $GITHUB_STEP_SUMMARY
          echo "3. **Download** and install the APK above" >> $GITHUB_STEP_SUMMARY
          echo "4. **Enable** module in LSPosed Manager" >> $GITHUB_STEP_SUMMARY
          echo "5. **Reboot** device" >> $GITHUB_STEP_SUMMARY
          echo "6. **Enjoy** unrestricted device access! üîì" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üéä **Your FuckDevicePolicy Xposed module is ready to liberate your device!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**üí™ Take back control - Your device, your rules!**" >> $GITHUB_STEP_SUMMARY
